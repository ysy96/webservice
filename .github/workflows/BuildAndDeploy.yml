name: CI and CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with: 
          node-version: "16.x"
    # - name: Install dependencies
    #   run: npm install express nodemon jest supertest mysql dotenv bcrypt sequelize --save

    # # run unit test for api
    # - name: Run test
    #   run: npm test
      - uses: actions/checkout@v1
      - name: Zip Folder
        run: zip -r csye6225-webapp.zip src/

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: csye6225-webapp
          path: csye6225-webapp.zip

      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: csye6225-webapp

      # Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1 
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ secrets.AWS_REGION }}

      # build artifact
      - name: Build Artifact
        uses: hashicorp/packer-github-actions@master
        with:
          command: build -var-file=packer/vars.json
          arguments: "-color=false -on-error=abort"
          target: packer/ami.json
      
  deploy:
    name: CD Pipeline
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['16.x']
        appname: ['csye6225-webapp']
        deploy-group: ['csye6225-webapp-deployment']
        s3-bucket: ['codedeploy.prod.songyue.me']
        s3-filename: ['csye6225-webapp']

    needs: build
    steps:
      - uses: actions/checkout@v2

      # Initialize Node.js
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # Install AWS CLI 2
      - name: Install AWS CLI 2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      # Configure AWS IAM credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1 
        with:
          aws-access-key-id: ${{ secrets.GACTIONS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.GACTIONS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          

      # Deploy push to AWS S3
      - name: AWS Deploy push
        run: |
          aws deploy push \
          --application-name ${{ matrix.appname }} \
          --description "This is a revision for the ${{ matrix.appname }}-${{ github.sha }}" \
          --ignore-hidden-files \
          --s3-location s3://${{ matrix.s3-bucket }}/${{ matrix.s3-filename }}.zip \
          --source .
          
      # Create deployment to CodeDeploy
      - name: AWS Create Deployment
        run: |
          aws deploy create-deployment \
           --application-name ${{ matrix.appname }} \
           --deployment-config-name CodeDeployDefault.AllAtOnce \
           --deployment-group-name ${{ matrix.deploy-group }} \
           --file-exists-behavior OVERWRITE \
           --s3-location bucket=${{ matrix.s3-bucket }},key=${{ matrix.s3-filename }}.zip,bundleType=zip \